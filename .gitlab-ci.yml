stages:
  - build
  - test
  - deploy

# Job build
build_job:
  stage: build
  image: php:8.3
  services:
    - mysql:8.0
  before_script:
    - apt-get update && apt-get install -y libpng-dev libjpeg-dev libfreetype6-dev libpng-dev libjpeg-dev libpng-dev libzip-dev unzip
    - docker-php-ext-configure gd --with-freetype --with-jpeg
    - docker-php-ext-install gd zip
    - curl -sS https://getcomposer.org/installer | php
    - mv composer.phar /usr/local/bin/composer
    - composer --version
    - composer install --prefer-dist --no-interaction --no-progress --no-suggest
    - cp .env.example .env
    - php artisan key:generate
    - php artisan migrate
    - apt-get update
    - apt-get install -y curl gnupg
    - curl -fsSL https://deb.nodesource.com/setup_18.x | bash - # Thay thế 18.x bằng phiên bản Node.js mong muốn
    - apt-get install -y nodejs
    - node --version                         # Kiểm tra phiên bản Node.js
    - npm --version                          # Kiểm tra phiên bản npm
    - npm install                            # Cài đặt các gói npm
    - npm run build
  script:
    - echo "Build completed."

# Job test
test_job:
  stage: test
  image: php:8.3
  services:
    - mysql:8.0
  before_script:
    - apt-get update && apt-get install -y libpng-dev libjpeg-dev libfreetype6-dev libpng-dev libjpeg-dev libpng-dev libzip-dev unzip
    - docker-php-ext-configure gd --with-freetype --with-jpeg
    - docker-php-ext-install gd zip
    - curl -sS https://getcomposer.org/installer | php
    - mv composer.phar /usr/local/bin/composer
    - composer --version
    - composer install --prefer-dist --no-interaction --no-progress --no-suggest
    - cp .env.example .env
    - php artisan key:generate
  script:
    - php artisan migrate
    - ./vendor/bin/phpunit
  artifacts:
    paths:
      - storage/logs/

# Job deploy
deploy_job:
  stage: deploy
  before_script:
    - 'which ssh-agent || ( apk update -y && apk add openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo ${SSH_PASSPHRASE_STAGING} |ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
      - >
        ssh ubuntu@52.64.135.244
        "cd /var/www/html/ecm01;
        sudo su;
        chown $USER:$USER /var/www/html/ecm01;
        chgrp -R www-data storage bootstrap/cache;
        chmod -R ug+rwx storage bootstrap/cache;
        chmod -R 755 /var/www/html/ecm01;
        chmod -R o+w /var/www/html/ecm01/storage/;
        git stash;
        git checkout develop;
        git pull origin develop;
        export COMPOSER_ALLOW_SUPERUSER=1;
        composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts;
        composer dump-autoload;
        php artisan migrate;
        php artisan queue:restart;
        php artisan optimize:clear;
        npm run build;"
  only:
      - develop
